{"version":3,"sources":["../../src/providers/item-data-storage/item-data-storage.ts","../../node_modules/@angular/core/esm5 lazy","../../src lazy","../../src/pages/home/home.ts","../../src/pages/item-details/item-details.ts","../../src/pages/item-booking/item-booking.ts","../../src/pages/booked/booked.ts","../../src/pages/contact-info/contact-info.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../src/pages/home/home.module.ts","../../src/components/item.card.component.module.ts","../../src/components/item-card/item-card.ts","../../src/app/app.component.ts","../../src/providers/data-native-storage/data-native-storage.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\nimport { Item } from '../../app/models/Item';\r\n\r\n@Injectable()\r\nexport class ItemDataStorageProvider {\r\n  /**\r\n   * Список товаров\r\n   * @type {Item[]}\r\n   */\r\n  public items: Item[];\r\n\r\n  constructor(public http: HttpClient) {\r\n  }\r\n\r\n  /**\r\n   * Возвращает промис, который получает данные по товарам из json, присваивает свойству класса\r\n   * @returns {Observable<any>}\r\n   */\r\n  getItems(): Promise<Item[]> {\r\n    const url: string = 'assets/items.json';\r\n    return new Promise((resolve, reject) => {\r\n      this.http.get(url).subscribe(\r\n        (result: Item[]) => {\r\n          this.items = result;\r\n          resolve(result);\r\n        },\r\n        error => {\r\n          reject();\r\n        }\r\n      );\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Возвращает массив с данными о товарах\r\n   * @returns {Item[]}\r\n   */\r\n  returnItems(): Item[] {\r\n    return this.items;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/item-data-storage/item-data-storage.ts","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 114;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/esm5 lazy\n// module id = 114\n// module chunks = 1","var map = {\n\t\"../pages/filter/filter.module\": [\n\t\t284,\n\t\t0\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids)\n\t\treturn Promise.reject(new Error(\"Cannot find module '\" + req + \"'.\"));\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(ids[0]);\n\t});\n};\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 156;\nmodule.exports = webpackAsyncContext;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 156\n// module chunks = 1","import { Component } from '@angular/core';\r\nimport { NavController, ModalController, Modal } from 'ionic-angular';\r\n\r\nimport { Item } from '../../app/models/Item';\r\nimport { ItemDetailsPage } from '../item-details/item-details';\r\nimport { ItemDataStorageProvider } from '../../providers/item-data-storage/item-data-storage';\r\nimport { FilterData, Seasons } from '../../app/models/filterData';\r\n\r\n@Component({\r\n  selector: 'page-home',\r\n  templateUrl: 'home.html'\r\n})\r\nexport class HomePage {\r\n  /**\r\n   * Список товаров\r\n   * @type {Item[]}\r\n   */\r\n  public items: Item[];\r\n\r\n  /**\r\n   * Сообщение об ошибке\r\n   * @type {string | null}\r\n   */\r\n  public dataError: string | null;\r\n\r\n  /**\r\n   * Данные для фильтра\r\n   * @type {FilterData}\r\n   */\r\n  public filterData: FilterData;\r\n\r\n  constructor(public navCtrl: NavController,\r\n              public ItemDataStorageProvider: ItemDataStorageProvider,\r\n              private modalCtrl: ModalController) {\r\n    if (this.ItemDataStorageProvider.returnItems()) {\r\n      this.dataError = null;\r\n    } else {\r\n      this.dataError = 'Данные о товарах ещё незагружены,подождите.';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * При загрузке компонента проверяет загружены ли уже данные по товарам в сервис,\r\n   * если загружены, берёт их из сервиса,\r\n   * если нет, загружает\r\n   */\r\n  ngOnInit(): void {\r\n    const fetchedData: Item[] | undefined = this.ItemDataStorageProvider.returnItems();\r\n    if (!fetchedData) {\r\n      this.ItemDataStorageProvider.getItems().then(\r\n        result => {\r\n          this.items = result;\r\n          this.dataError = null;\r\n        },\r\n        error => this.dataError = 'Возникла ошибка при загрузке товаров.'\r\n      );\r\n    } else {\r\n      this.items = fetchedData;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Переход на страницу с детальными данными выбранного товара\r\n   * @param {Item} chosenItem - выбранный товар\r\n   */\r\n  goItemDetail(chosenItem: Item): void {\r\n    this.navCtrl.push(ItemDetailsPage, {chosenItem: chosenItem});\r\n  }\r\n\r\n  /**\r\n   * Открывает окно с фильтром\r\n   */\r\n  openFilter(): void {\r\n    if (!this.filterData) {\r\n      const types: string[] = this.items\r\n        .map(item => item.type)\r\n        .filter((item, pos, arr) => arr.indexOf(item) === pos);\r\n      const maxPrice: number = Math.max(...this.items.map(item => item.price));\r\n\r\n      this.filterData = {\r\n        values: {\r\n          type: null,\r\n          season: {\r\n            'весна': false,\r\n            'лето': false,\r\n            'осень': false,\r\n            'зима': false\r\n          },\r\n          availability: false,\r\n          priceRange: {\r\n            lower: 0,\r\n            upper: maxPrice\r\n          }\r\n        },\r\n        types: types,\r\n        maxPrice: maxPrice\r\n      };\r\n    }\r\n\r\n    const filter: Modal = this.modalCtrl.create('FilterPage', {dataToFilter: this.filterData});\r\n\r\n    filter.present();\r\n\r\n    filter.onWillDismiss((dataFromFilter: FilterData | undefined) => {\r\n      if (dataFromFilter) {\r\n        this.filterData = dataFromFilter;\r\n        this.filterItems();\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Фильтрование товаров по заданным параметрам\r\n   */\r\n  filterItems(): void {\r\n    const allItems = this.ItemDataStorageProvider.returnItems();\r\n    this.items = allItems.filter(item =>\r\n      (this.filterData.values.type ? item.type === this.filterData.values.type : true)\r\n      &&\r\n      this.filterBySeason(item.season, this.filterData.values.season)\r\n      &&\r\n      (this.filterData.values.availability ? item.availability === this.filterData.values.availability : true)\r\n      &&\r\n      item.price >= this.filterData.values.priceRange.lower && item.price <= this.filterData.values.priceRange.upper\r\n    );\r\n\r\n    if (!this.items.length) {\r\n      this.dataError = 'Нет товаров с выбранными условиями';\r\n    } else {\r\n      this.dataError = null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Возвращает результат проверки наличия отмеченных сезонов в фильтре в характеристике товара\r\n   * @param {string[]} itemSeasons - массив значений сезонов товара\r\n   * @param {Seasons} filterSeasons - объект с выбранными значениями сезонов в фильтре\r\n   * @returns {boolean} - true/false - все значения фильтра есть в товаре/хотя бы одного нет\r\n   */\r\n  filterBySeason(itemSeasons: string[], filterSeasons: Seasons): boolean {\r\n    const seasonsArr = [];\r\n    for (let seasonKey in filterSeasons) {\r\n      if (filterSeasons[seasonKey] === true) {\r\n        seasonsArr.push(seasonKey);\r\n      }\r\n    }\r\n    if (!seasonsArr.length) {\r\n      return true;\r\n    }\r\n    const result = seasonsArr.map(item => itemSeasons.indexOf(item));\r\n    return result.indexOf(-1) === -1;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/home/home.ts","import { Component } from '@angular/core';\r\nimport { NavController, NavParams } from 'ionic-angular';\r\n\r\nimport { Item } from '../../app/models/Item';\r\nimport { ItemBookingPage } from '../item-booking/item-booking';\r\nimport { ItemBookingData } from '../../app/models/ItemBookingData';\r\nimport { DataNativeStorageProvider } from '../../providers/data-native-storage/data-native-storage';\r\n\r\n@Component({\r\n  selector: 'page-item-details',\r\n  templateUrl: 'item-details.html'\r\n})\r\nexport class ItemDetailsPage {\r\n  /**\r\n   * Переданные данные о выбранном товаре\r\n   * @type {Item}\r\n   */\r\n  public chosenItem: Item;\r\n\r\n  /**\r\n   * Массив со строками дат, на которые забронирован выбранный товар\r\n   * @type {string[]}\r\n   */\r\n  public bookedDates: string[];\r\n\r\n  /**\r\n   * Забронирован ли товар true/false да/нет\r\n   * @type {boolean}\r\n   */\r\n  public isBooked: boolean;\r\n\r\n  constructor(public navCtrl: NavController,\r\n              public navParams: NavParams,\r\n              public dataNativeStorageProvider: DataNativeStorageProvider) {\r\n    this.chosenItem = this.navParams.get('chosenItem');\r\n\r\n    this.dataNativeStorageProvider.getBookedItems().then(\r\n      result => {\r\n        const chosenItemBookData: ItemBookingData[] = result.filter(item => item.id === this.chosenItem.id);\r\n        if (chosenItemBookData.length) {\r\n          this.bookedDates = chosenItemBookData[0].dates;\r\n          this.isBooked = true;\r\n        } else {\r\n          this.isBooked = false;\r\n        }\r\n      },\r\n      () => {\r\n        this.isBooked = false;\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Переход на страницу резервирования\r\n   * @param {Item} bookItem - товар для резервирования\r\n   */\r\n  goItemBook(bookItem: Item): void {\r\n    this.navCtrl.push(ItemBookingPage, {bookItem: bookItem});\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/item-details/item-details.ts","import { Component } from '@angular/core';\r\nimport { NavParams } from 'ionic-angular';\r\n\r\nimport { Item } from '../../app/models/Item';\r\nimport { Message } from '../../app/models/Message';\r\nimport { ItemBookingData } from '../../app/models/ItemBookingData';\r\nimport { DataNativeStorageProvider } from '../../providers/data-native-storage/data-native-storage';\r\n\r\n@Component({\r\n  selector: 'page-item-booking',\r\n  templateUrl: 'item-booking.html'\r\n})\r\nexport class ItemBookingPage {\r\n  /**\r\n   * Текущая дата\r\n   * @type {string}\r\n   */\r\n  public currentDate: string;\r\n\r\n  /**\r\n   * Дата для бронирования\r\n   * @type {string}\r\n   */\r\n  public bookDate: string;\r\n\r\n  /**\r\n   * Товар для бронирования\r\n   * @type {Item}\r\n   */\r\n  public bookItem: Item;\r\n\r\n  /**\r\n   * Информация о результатах действий при бронировании\r\n   * @type {Message}\r\n   */\r\n  public bookingMessage: Message;\r\n\r\n  /**\r\n   * Массив забронированных товаров\r\n   * @type {ItemBookingData}\r\n   */\r\n  public currentStorage: ItemBookingData[] | undefined;\r\n\r\n  constructor(public navParams: NavParams,\r\n              public dataNativeStorageProvider: DataNativeStorageProvider) {\r\n\r\n    const today: Date = new Date();\r\n    this.currentDate = today.toLocaleDateString().split('.').reverse().join('-');\r\n    this.bookDate = this.currentDate;\r\n\r\n    this.bookItem = this.navParams.get('bookItem');\r\n\r\n    this.bookingMessage = {\r\n      messageText: '',\r\n      isWarning: false\r\n    };\r\n\r\n    this.dataNativeStorageProvider.getBookedItems().then(\r\n      result => {\r\n        this.currentStorage = result;\r\n      },\r\n      () => {}\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Бронирование товара\r\n   */\r\n  bookProcess(): void {\r\n    if (!this.currentStorage) {\r\n      this.currentStorage = [\r\n        {\r\n          id: this.bookItem.id,\r\n          dates: [this.bookDate]\r\n        }\r\n      ];\r\n      this.dataNativeStorageProvider.setBookedItems(this.currentStorage)\r\n        .then(\r\n          () => this.setMessage(\r\n            `Товар ${this.bookItem.title} успешно забронирован на ${this.bookDate}!`,\r\n            false\r\n          ),\r\n          () => this.setMessage(\r\n            `Ошибка при бронировании! Повторите операцию.`,\r\n            true\r\n          )\r\n        );\r\n      return;\r\n    }\r\n\r\n    const itemIndex = this.currentStorage.findIndex(item => item.id === this.bookItem.id);\r\n    if (itemIndex === -1) {\r\n      this.currentStorage.push({\r\n        id: this.bookItem.id,\r\n        dates: [this.bookDate]\r\n      });\r\n      this.dataNativeStorageProvider.setBookedItems(this.currentStorage)\r\n        .then(\r\n          () => this.setMessage(\r\n            `Товар ${this.bookItem.title} успешно забронирован на ${this.bookDate}!`,\r\n            false\r\n          ),\r\n          () => this.setMessage(\r\n            `Ошибка при бронировании! Повторите операцию.`,\r\n            true\r\n          )\r\n        );\r\n    } else {\r\n      const bookedDates: string[] = this.currentStorage[itemIndex].dates;\r\n      const dateIndex: number = bookedDates.findIndex(item => item === this.bookDate);\r\n      if (dateIndex === -1) {\r\n        this.currentStorage[itemIndex].dates.push(this.bookDate);\r\n        this.dataNativeStorageProvider.setBookedItems(this.currentStorage)\r\n          .then(\r\n            () => this.setMessage(\r\n              `Товар ${this.bookItem.title} успешно забронирован на ${this.bookDate}!`,\r\n              false\r\n            ),\r\n            () => this.setMessage(\r\n              `Ошибка при бронировании! Повторите операцию.`,\r\n              true\r\n            )\r\n          );\r\n\r\n      } else {\r\n        this.setMessage(\r\n          `Товар ${this.bookItem.title} на ${this.bookDate} уже был забронирован ранее!`,\r\n          true\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Сообщает предупреждающее ли сообщение пользователю, чтобы повесить на элемент DOM соответствующий класс\r\n   * @returns {boolean} - true/false - да/нет\r\n   */\r\n  isWarningMessage(): boolean {\r\n    return this.bookingMessage.isWarning;\r\n  }\r\n\r\n  /**\r\n   * Устанавливает значение текста сообщения пользователю\r\n   * @param {string} messageText - текст сообщения\r\n   * @param {boolean} warning - true/false - предупреждающее/нет\r\n   */\r\n  setMessage(messageText: string, warning: boolean): void {\r\n    this.bookingMessage.messageText = messageText;\r\n    this.bookingMessage.isWarning = warning;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/item-booking/item-booking.ts","import { Component } from '@angular/core';\r\nimport { AlertController } from 'ionic-angular';\r\n\r\nimport { ItemDataStorageProvider } from '../../providers/item-data-storage/item-data-storage';\r\nimport { ItemBookingData } from '../../app/models/ItemBookingData';\r\nimport { Item } from '../../app/models/Item';\r\nimport { DataNativeStorageProvider } from '../../providers/data-native-storage/data-native-storage';\r\n\r\n@Component({\r\n  selector: 'page-booked',\r\n  templateUrl: 'booked.html'\r\n})\r\nexport class BookedPage {\r\n  /**\r\n   * Список товаров\r\n   * @type {Item[]}\r\n   */\r\n  public items: Item[];\r\n\r\n  /**\r\n   * Забронированные товары\r\n   * @type {ItemBookingData[]}\r\n   */\r\n  public bookedItems: ItemBookingData[];\r\n\r\n  /**\r\n   * Есть ли в localeStorage товары\r\n   * @type {boolean}\r\n   */\r\n  public areBookedItemsInStorage: boolean;\r\n\r\n  /**\r\n   * Сообщение, если забронированных товаров нет\r\n   * @type {string}\r\n   */\r\n  public noBookedItemsInfo: string = 'Забронированных товаров нет!';\r\n\r\n  constructor(public alertCtrl: AlertController,\r\n              public itemDataStorageProvider: ItemDataStorageProvider,\r\n              public dataNativeStorageProvider: DataNativeStorageProvider) {\r\n\r\n    this.items = this.itemDataStorageProvider.returnItems();\r\n\r\n    this.dataNativeStorageProvider.getBookedItems().then(\r\n      result => {\r\n        this.bookedItems = result;\r\n        this.areBookedItemsInStorage = true;\r\n      },\r\n      () => {\r\n        this.areBookedItemsInStorage = false;\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Процесс отмены бронирования выбранного товара с выбранной даты после подтверждения\r\n   * @param {number} id - идентификатор товара\r\n   * @param {string} date - дата бронирования\r\n   */\r\n  confirmedUnBook(id: number, date: string): void {\r\n    const itemIndex = this.bookedItems.findIndex(item => item.id === id);\r\n    const dateIndex: number = this.bookedItems[itemIndex].dates.findIndex(item => item === date);\r\n    this.bookedItems[itemIndex].dates.splice(dateIndex, 1);\r\n    if (!this.bookedItems[itemIndex].dates.length) {\r\n      this.bookedItems.splice(itemIndex, 1);\r\n    }\r\n    if (!this.bookedItems.length) {\r\n      this.areBookedItemsInStorage = false;\r\n    }\r\n    this.dataNativeStorageProvider.setBookedItems(this.bookedItems).then(\r\n      () => {\r\n      },\r\n      () => {\r\n        this.bookedItems[itemIndex].dates.push(date);\r\n        const alert = this.alertCtrl.create({\r\n          title: 'Ошибка удаления!',\r\n          subTitle: 'Попробуйте ещё раз позже.',\r\n          buttons: ['OK']\r\n        });\r\n        alert.present();\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Отмена бронирования выбранного товара с выбранной даты\r\n   * @param {number} id - идентификатор товара\r\n   * @param {string} date - дата бронирования\r\n   */\r\n  unBook(id: number, date: string): void {\r\n    const confirm = this.alertCtrl.create({\r\n      title: 'Подтвердите',\r\n      message: 'Вы действительно хотите отменить бронирование?',\r\n      buttons: [\r\n        {\r\n          text: 'Да',\r\n          handler: () => {\r\n            this.confirmedUnBook(id, date);\r\n          }\r\n        },\r\n        {\r\n          text: 'Нет',\r\n          handler: () => {\r\n          }\r\n        }\r\n      ]\r\n    });\r\n    confirm.present();\r\n  }\r\n\r\n  /**\r\n   * Получает строку со значением ключа из объекта с товарами по идентификатору товара\r\n   * @param {number} id - идентификатор товара\r\n   * @param {string} key - значение ключа, данные которого нужно получить\r\n   * @returns {string} - строка со значением ключа\r\n   */\r\n  getItemKeyValue(id: number, key: string): string {\r\n    const itemIndex = this.items.findIndex(item => item.id === id);\r\n    return this.items[itemIndex][key];\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/booked/booked.ts","import { Component } from '@angular/core';\r\nimport { Schedule } from '../../app/models/Schedule';\r\nimport { Today } from '../../app/models/Today';\r\n\r\n@Component({\r\n  selector: 'page-contact-info',\r\n  templateUrl: 'contact-info.html'\r\n})\r\nexport class ContactInfoPage {\r\n  /**\r\n   * Телефонный номер организации\r\n   * @type {string}\r\n   */\r\n  public phoneNumber: string;\r\n\r\n  /**\r\n   * Телефонный номер организации для функции звонка\r\n   * @type {string}\r\n   */\r\n  public purePhoneNumber: string;\r\n\r\n  /**\r\n   * Виден ли контент\r\n   * @type {boolean}\r\n   */\r\n  public isVisible: boolean;\r\n\r\n  /**\r\n   * Режим работы\r\n   * @type {Schedule[]}\r\n   */\r\n  public schedule: Schedule[];\r\n\r\n  /**\r\n   * Данные по работе организации на сегодня\r\n   * @type {Today}\r\n   */\r\n  public today: Today;\r\n\r\n  constructor() {\r\n    this.phoneNumber = '+7 (123) 45-67-89';\r\n    this.purePhoneNumber = this.phoneNumber.replace(/[- ()]/g, '');\r\n    this.isVisible = true;\r\n    this.schedule = [\r\n      {\r\n        day: 'ВС',\r\n        openTime: '09:00',\r\n        closeTime: '21:00',\r\n        isDayOff: false\r\n      },\r\n      {\r\n        day: 'ПН',\r\n        openTime: '10:00',\r\n        closeTime: '20:00',\r\n        isDayOff: false\r\n      },\r\n      {\r\n        day: 'ВТ',\r\n        openTime: '08:00',\r\n        closeTime: '20:00',\r\n        isDayOff: false\r\n      },\r\n      {\r\n        day: 'СР',\r\n        openTime: '-',\r\n        closeTime: '-',\r\n        isDayOff: true\r\n      },\r\n      {\r\n        day: 'ЧТ',\r\n        openTime: '-',\r\n        closeTime: '-',\r\n        isDayOff: true\r\n      },\r\n      {\r\n        day: 'ПТ',\r\n        openTime: '08:00',\r\n        closeTime: '20:00',\r\n        isDayOff: false\r\n      },\r\n      {\r\n        day: 'СБ',\r\n        openTime: '09:00',\r\n        closeTime: '21:00',\r\n        isDayOff: false\r\n      }\r\n    ];\r\n\r\n    this.today = {\r\n      currentTime: new Date(Date.now()),\r\n      openTime: '',\r\n      closeTime: '',\r\n      weekDayId: 0,\r\n      nextWorkingDayId: 1,\r\n      nextWorkingDayDate: '',\r\n      openTimeIfClosed: '',\r\n      isOpened: false\r\n    };\r\n    this.today.weekDayId = this.today.currentTime.getDay();\r\n    this.today.nextWorkingDayId = this.getNextDayId(this.today.weekDayId);\r\n    this.today.openTime = this.schedule[this.today.weekDayId].openTime;\r\n    this.today.closeTime = this.schedule[this.today.weekDayId].closeTime;\r\n\r\n    const todayDate = this.today.currentTime.getDate();\r\n    const daysIdGap = this.today.nextWorkingDayId - this.today.weekDayId;\r\n    const daysGap = daysIdGap >= 1 ? daysIdGap : daysIdGap + 7;\r\n    const nextWorkDayDate = new Date(this.today.currentTime);\r\n    nextWorkDayDate.setDate(todayDate + daysGap);\r\n    this.today.nextWorkingDayDate = nextWorkDayDate.toLocaleDateString();\r\n\r\n    if (this.schedule[this.today.weekDayId].isDayOff) {\r\n      this.today.isOpened = false;\r\n      this.today.openTimeIfClosed = this.schedule[this.today.nextWorkingDayId].openTime;\r\n    } else {\r\n      const currentMinutes = this.getMinutes(this.today.currentTime);\r\n      const beginMinutes = this.getMinutes(this.today.openTime);\r\n      const endMinutes = this.getMinutes(this.today.closeTime);\r\n      if (currentMinutes < beginMinutes) {\r\n        this.today.isOpened = false;\r\n        this.today.openTimeIfClosed = this.today.openTime;\r\n        this.today.nextWorkingDayDate = '';\r\n      } else if (currentMinutes >= endMinutes) {\r\n        this.today.isOpened = false;\r\n        this.today.openTimeIfClosed = this.schedule[this.today.nextWorkingDayId].openTime;\r\n      } else {\r\n        this.today.isOpened = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Возвращает переведённое в минуты значение времени\r\n   * @param {Date | string} time - строка со временем вида чч:мм\r\n   * @returns {number} - количество минут\r\n   */\r\n  getMinutes(time: Date | string): number {\r\n    let timeArr: string[];\r\n    if (typeof time === 'string') {\r\n      timeArr = time.split(':');\r\n    } else {\r\n      timeArr = time\r\n        .toLocaleTimeString('ru-Ru', {hour12: false})\r\n        .split(':');\r\n    }\r\n    return parseInt(timeArr[0], 10) * 60 + parseInt(timeArr[1], 10);\r\n  }\r\n\r\n  /**\r\n   * Возвращает идентификатор следующего за сегодняшним рабочего дня\r\n   * @param {number} todayId - идентификатор сегодняшнего дня\r\n   * @returns {number} - идентификатор следующего рабочего дня\r\n   */\r\n  getNextDayId(todayId: number): number {\r\n    let nextDayId = todayId + 1;\r\n    while (true) {\r\n      if (nextDayId === 7) {\r\n        nextDayId = 0;\r\n      }\r\n      if (this.schedule[nextDayId].isDayOff) {\r\n        nextDayId++;\r\n      } else {\r\n        return nextDayId;\r\n      }\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/contact-info/contact-info.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app.module';\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { ErrorHandler, NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { IonicApp, IonicErrorHandler, IonicModule } from 'ionic-angular';\r\nimport { NativeStorage } from '@ionic-native/native-storage';\r\nimport { SplashScreen } from '@ionic-native/splash-screen';\r\nimport { StatusBar } from '@ionic-native/status-bar';\r\n\r\nimport { DataNativeStorageProvider } from '../providers/data-native-storage/data-native-storage';\r\nimport { ItemDataStorageProvider } from '../providers/item-data-storage/item-data-storage';\r\nimport { HomePageModule } from '../pages/home/home.module';\r\nimport { BookedPage } from '../pages/booked/booked';\r\nimport { ContactInfoPage } from '../pages/contact-info/contact-info';\r\nimport { ItemDetailsPage } from '../pages/item-details/item-details';\r\nimport { ItemBookingPage } from '../pages/item-booking/item-booking';\r\nimport { MyApp } from './app.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    MyApp,\r\n    BookedPage,\r\n    ContactInfoPage,\r\n    ItemDetailsPage,\r\n    ItemBookingPage\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    HomePageModule,\r\n    IonicModule.forRoot(MyApp, {\r\n      monthNames: ['январь', 'февраль', 'март', 'апрель', 'май', 'июнь', 'июль', 'август', 'сентябрь', 'октябрь', 'ноябрь', 'декабрь' ],\r\n      monthShortNames: ['янв', 'фев', 'март', 'апр', 'май', 'июнь', 'июль', 'авг', 'сен', 'окт', 'ноя', 'дек' ],\r\n      dayNames: ['понедельник', 'вторник', 'среда', 'четверг', 'пятница', 'суббота', 'воскресенье' ],\r\n      dayShortNames: ['пн', 'вт', 'ср', 'чт', 'пт', 'сб', 'вс' ],\r\n    })\r\n  ],\r\n  bootstrap: [IonicApp],\r\n  entryComponents: [\r\n    MyApp,\r\n    BookedPage,\r\n    ContactInfoPage,\r\n    ItemDetailsPage,\r\n    ItemBookingPage\r\n  ],\r\n  providers: [\r\n    StatusBar,\r\n    SplashScreen,\r\n    {provide: ErrorHandler, useClass: IonicErrorHandler},\r\n    ItemDataStorageProvider,\r\n    NativeStorage,\r\n    DataNativeStorageProvider\r\n  ]\r\n})\r\nexport class AppModule {\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { NgModule } from '@angular/core';\r\nimport { IonicPageModule } from 'ionic-angular';\r\nimport { HomePage } from './home';\r\nimport { ItemCardComponentModule } from '../../components/item.card.component.module';\r\n\r\n@NgModule({\r\n  declarations: [HomePage],\r\n  imports: [\r\n    IonicPageModule.forChild(HomePage),\r\n    ItemCardComponentModule\r\n  ]\r\n})\r\nexport class HomePageModule {\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/home/home.module.ts","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { ItemCardComponent } from './item-card/item-card';\r\nimport { IonicPageModule } from 'ionic-angular';\r\n\r\n@NgModule({\r\n  declarations: [ItemCardComponent],\r\n  imports: [IonicPageModule.forChild(ItemCardComponent)],\r\n  exports: [ItemCardComponent],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\r\n})\r\nexport class ItemCardComponentModule {\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/item.card.component.module.ts","import { Component, Input } from '@angular/core';\r\nimport { Item } from '../../app/models/Item';\r\n\r\n@Component({\r\n  selector: 'item-card',\r\n  templateUrl: 'item-card.html'\r\n})\r\nexport class ItemCardComponent {\r\n  /**\r\n   * Данные о товаре для отображения в карточке\r\n   * @type {Item}\r\n   */\r\n  @Input() itemCardData: Item;\r\n\r\n  constructor() {\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/item-card/item-card.ts","import { Component, ViewChild } from '@angular/core';\r\nimport { Platform, MenuController, Nav } from 'ionic-angular';\r\nimport { StatusBar } from '@ionic-native/status-bar';\r\nimport { SplashScreen } from '@ionic-native/splash-screen';\r\n\r\nimport { HomePage } from '../pages/home/home';\r\nimport { BookedPage } from '../pages/booked/booked';\r\nimport { ContactInfoPage } from '../pages/contact-info/contact-info';\r\n\r\ninterface Page {\r\n  title: string;\r\n  component: any;\r\n}\r\n\r\n@Component({\r\n  templateUrl: 'app.html'\r\n})\r\nexport class MyApp {\r\n  @ViewChild(Nav) nav: Nav;\r\n\r\n  /**\r\n   * Корневая страница - страница, которая будет показана при загрузке приложения\r\n   * @type {any}\r\n   */\r\n  rootPage: any = HomePage;\r\n\r\n  /**\r\n   * Список страниц - список страниц, которые участвуют в навигации по бургер-меню\r\n   * @type {Page[]}\r\n   */\r\n  pages: Page[];\r\n\r\n  constructor(\r\n    public platform: Platform,\r\n    public statusBar: StatusBar,\r\n    public splashScreen: SplashScreen,\r\n    public menu: MenuController) {\r\n\r\n    this.pages = [\r\n      {title: 'Домашняя', component: HomePage},\r\n      {title: 'Забронированные товары', component: BookedPage},\r\n      {title: 'Контакты', component: ContactInfoPage}\r\n    ];\r\n\r\n    platform.ready().then(() => {\r\n      statusBar.styleDefault();\r\n      splashScreen.hide();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Закрывает меню и переходит на выбранную страницу приложения\r\n   * @param {Page} page - страница на которую будет осуществлён переход\r\n   */\r\n  navTo(page: Page): void {\r\n    this.menu.close();\r\n    this.nav.setRoot(page.component);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { NativeStorage } from '@ionic-native/native-storage';\r\n\r\nimport { ItemBookingData } from '../../app/models/ItemBookingData';\r\n\r\n@Injectable()\r\nexport class DataNativeStorageProvider {\r\n  /**\r\n   * Имя ключа для хранения данных в nativeStorage\r\n   * @type {string}\r\n   * @private\r\n   */\r\n  private storageDataKey: string = 'booked-items';\r\n\r\n  constructor(public http: HttpClient,\r\n              private nativeStorage: NativeStorage) {\r\n  }\r\n\r\n  /**\r\n   * Возвращает Promise, который устанавливает данные о забронированных товарах в хранилище\r\n   * @param {ItemBookingData[]} data - данные о забронированных товарах для установки в хранилище\r\n   * @returns {Promise<void>} - Promise\r\n   */\r\n  setBookedItems(data: ItemBookingData[]): Promise<void> {\r\n    return new Promise((resolve, reject) => {\r\n      this.nativeStorage.setItem(this.storageDataKey, data)\r\n        .then(\r\n          () => {\r\n            resolve();\r\n          },\r\n          () => {\r\n            reject();\r\n          }\r\n        );\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Возвращает Promise, который забирает данные о забронированных товарах из хранилища\r\n   * @returns {Promise<ItemBookingData[]>} - Promise\r\n   */\r\n  getBookedItems(): Promise<ItemBookingData[]> {\r\n    return new Promise((resolve, reject) => {\r\n      this.nativeStorage.getItem(this.storageDataKey)\r\n        .then(\r\n          data => {\r\n            resolve(data);\r\n          },\r\n          () => {\r\n            reject();\r\n          }\r\n        );\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Возвращает строку с датой в более удобочитаемом виде (дд.ммм.гггг)\r\n   * @param {string} date - строка с датой (гггг-мм-дд)\r\n   * @returns {string} - строка с датой (дд.ммм.гггг)\r\n   */\r\n  showDate(date: string): string {\r\n    const monthNames: string[] = [\r\n      'янв',\r\n      'фев',\r\n      'март',\r\n      'апр',\r\n      'май',\r\n      'июнь',\r\n      'июль',\r\n      'авг',\r\n      'сен',\r\n      'окт',\r\n      'ноя',\r\n      'дек'\r\n    ];\r\n    const dateArr = date.split('-');\r\n    return `${dateArr[2]}.${monthNames[parseInt(dateArr[1], 10) - 1]}.${dateArr[0]}`;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/data-native-storage/data-native-storage.ts"],"sourceRoot":""}